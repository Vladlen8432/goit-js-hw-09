{"mappings":"YASA,SAASA,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IA4BMQ,SAASC,cAAc,SAC/BC,iBAAiB,UAzBtB,SAA0BC,GACxBA,EAAMC,iBAWN,IATA,IAAMC,EAAOL,SAASC,cAAc,SAC9BK,EAAaD,EAAKJ,cAAc,yBAChCM,EAAYF,EAAKJ,cAAc,wBAC/BO,EAAcH,EAAKJ,cAAc,0BAEjCQ,EAAeC,SAASJ,EAAWK,OACnCC,EAAOF,SAASH,EAAUI,OAC1BE,EAASH,SAASF,EAAYG,OAE3BG,EAAI,EAAGA,EAAID,EAAQC,IAAK,CAE/BxB,EAAcwB,EAAI,EADGL,EAAeK,EAAIF,GAErCG,MAAK,SAAAC,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MACjByB,QAAQC,IAAI,qBAAoCC,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,M,IAEvD4B,OAAM,SAAAJ,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MAClByB,QAAQC,IAAI,oBAAmCC,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   if (shouldResolve) {\n//     // Fulfill\n//   } else {\n//     // Reject\n//   }\n// }\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction handleFormSubmit(event) {\n  event.preventDefault();\n\n  const form = document.querySelector('.form');\n  const delayInput = form.querySelector('input[name = \"delay\"]');\n  const stepInput = form.querySelector('input[name = \"step\"]');\n  const amountInput = form.querySelector('input[name = \"amount\"]');\n\n  const initialDelay = parseInt(delayInput.value);\n  const step = parseInt(stepInput.value);\n  const amount = parseInt(amountInput.value);\n\n  for (let i = 0; i < amount; i++) {\n    const currentDelay = initialDelay + i * step;\n    createPromise(i + 1, currentDelay)\n      .then(({ position, delay }) => {\n        console.log(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', handleFormSubmit);\n"],"names":["$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","event","preventDefault","form1","delayInput","stepInput","amountInput","initialDelay","parseInt","value","step","amount","i","then","param","console","log","concat","catch"],"version":3,"file":"03-promises.f6d4243b.js.map"}